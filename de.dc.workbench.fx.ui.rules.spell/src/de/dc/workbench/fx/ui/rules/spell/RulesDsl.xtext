// automatically generated by Xtext
grammar de.dc.workbench.fx.ui.rules.spell.RulesDsl with org.eclipse.xtext.common.Terminals

import "http://www.frateranatis.org/fx/emf/rules" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

RulesManager returns RulesManager:
	{RulesManager}
	(imports+=Uri (imports+=Uri)*)?
	(rules+=Rule (rules+=Rule)*)?
	(outputs+=Output (outputs+=Output)*)?
	(ruleSet+=RuleSet (ruleSet+=RuleSet)*)?
;

Uri returns Uri:
	{Uri}
	'URI' uri=EString 'AS' name=EString
;

Rule returns Rule:
	{Rule}
	'RULE' name=EString '->' 'input' condition=Condition pattern=EString
//	'('
//		('category' ':' category=EString ',')?
//		('description' ':' description=EString ',')?
//		('condition' ':' condition=Condition ',')?
//		('pattern' ':' pattern=EString)?
//	')'
	;

RuleSet returns RuleSet:
	{RuleSet}
	'RULESET' name=EString
		( 'WHEN' rules+=[Rule|EString] ( "AND" rules+=[Rule|EString])* )?
		('THEN' output=[Output|EString])?
	'END';

EString returns ecore::EString:
	STRING | ID;

enum Condition returns Condition:
				EQUALS = '=' | EQUALS_IGNORE_CASE = 'EQUALS_IGNORE_CASE' | CONTAINS = 'CONTAINS' | COTNAINS_IGNORE_CASE = 'COTNAINS_IGNORE_CASE' | GREATER_THAN = 'GREATER_THAN' | GREATER_THAN_EQUALS = 'GREATER_THAN_EQUALS' | SMALL_THAN = 'SMALL_THAN' | SMALL_THAN_EQUALS = 'SMALL_THAN_EQUALS' | START_WITH = 'START_WITH' | START_IGNORE_CASE_WITH = 'START_IGNORE_CASE_WITH' | END_WITH = 'END_WITH' | END_IGNORE_CASE_WITH = 'END_IGNORE_CASE_WITH' | OR = 'OR' | AND = 'AND';

Input returns Input:
	{Input}
	(value=EString)?;

Output returns Output:
	{Output}
	'OUTPUT' name=EString '(' 
		('value' ':' value=EString )?
		('model' ':' model=[Uri|EString] ',')?
		('mapper' ':' mapper=[Uri|EString])?
	')' ( '{'
		(fields+=OutputField ( fields+=OutputField)*)?
	'}' )?
;

OutputField returns OutputField:
	{OutputField}
	name=EString '=' value=EString
;
	