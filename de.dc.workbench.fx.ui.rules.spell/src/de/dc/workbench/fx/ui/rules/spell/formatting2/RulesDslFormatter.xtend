/*
 * generated by Xtext 2.25.0
 */
package de.dc.workbench.fx.ui.rules.spell.formatting2

import com.google.inject.Inject
import de.dc.workbench.fx.ui.rules.RuleSet
import de.dc.workbench.fx.ui.rules.RulesManager
import de.dc.workbench.fx.ui.rules.spell.services.RulesDslGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class RulesDslFormatter extends AbstractFormatter2 {
	
	@Inject extension RulesDslGrammarAccess

	def dispatch void format(RulesManager rulesManager, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (rule : rulesManager.rules) {
			rule.format
		}
		for (ruleSet : rulesManager.ruleSet) {
			ruleSet.format
		}
	}

	def dispatch void format(RuleSet ruleSet, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		ruleSet.input.format
		ruleSet.output.format
	}
	
	// TODO: implement for TypeOutput
}
